<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "Users_Guide.ent">
%BOOK_ENTITIES;
]>

<chapter id="ManagingContainers">
<title>Managing Containers</title>

<para>
The Cloud Area Padovana provides an experimental service to run Docker Containers in a cloud environment.
</para>

<section id="Docker">
<title>What is Docker?</title>
<para>
Docker is a tool that allows you to run applications in a container. In this way the applications and all their dependencies, packaged in a virtual container, are fully portable and ready to run as designed in any environment.
Containers are lightweight and run without the extra load of a hypervisor, so many applications and environments can run on a single kernel never interfering one another. 
Docker operates at the OS level, so it can still be run inside a VM!
</para>
<para>
For better acknowledgement about Docker and how to install it, look at <ulink url="https://docs.docker.com/">Docker Documentation</ulink></para>

</section>

<section id="UploadDockCont">
<title>How to Upload Docker Images</title>
<para>
To istantiate Docker container the same way you launch VM
(see <xref linkend="CreatingVMs"/>.), you need a docker image saved in glance.</para>
<para>
In order to perform the previous task be sure that the computer you are using has:
<itemizedlist>
<listitem><para>
Openstack CLI installed with the correct setting of the environment variables (see <xref linkend="AccessingtheCloudthroughCLI"/>.)
</para></listitem>
<listitem><para>
Docker installed (<ulink url="https://docs.docker.com/engine/getstarted/step_one/">Docker Installation</ulink>)
</para></listitem>
</itemizedlist>
</para>
<para>
With the following commands you are able to load a docker image in your project.
</para>
<para>
You can download a docker image from Docker Registry
<screen>
docker pull &lt;image-name&gt;
</screen>
</para>
<para>
Save it and create an image in Glance. (see <xref linkend="ManagingImages"/> for a reference on "how to create and upload images".)
</para>
<screen>
docker save &lt;image-name&gt; | glance image-create --container-format=docker --disk-format=raw --name &lt;image-name&gt;
+------------------+--------------------------------------+
| Property         | Value                                |
+------------------+--------------------------------------+
| checksum         | 363070ea9529855747a3a511b5f0b785     |
| container_format | docker                               |
| created_at       | 2016-11-07T07:59:39Z                 |
| disk_format      | raw                                  |
| id               | e7a6b90b-19ed-4560-8945-6ee42e5c3fed |
| min_disk         | 0                                    |
| min_ram          | 0                                    |
| name             | centos                               |
| owner            | cbf5e7bab17d4e8cbad235d8eba924c8     |
| protected        | False                                |
| size             | 204124160                            |
| status           | active                               |
| tags             | []                                   |
| updated_at       | 2016-11-07T07:59:52Z                 |
| virtual_size     | None                                 |
| visibility       | private                              |
+------------------+--------------------------------------+


</screen>

<warning><para>
Be sure that the &lt;image-name&gt; in Docker is the same as in Glance. 
</para></warning>
<note><para> If an image is not compatible with some flavor of the instance, could be useful specify the options --min-disk and --min-ram in glance command, to avoid unsuccessfully spawining of the VM with this image. In this way when launching the VM through the dashboard, not compatible flavor are not avalaible. </para>
<para>
docker save &lt;image-name&gt; | glance image-create --container-format=docker --disk-format=raw --min-disk DISK_GB --min-ram DISK_RAM --name &lt;image-name&gt;
</para>
<para>
--min-disk DISK_GB
    The minimum size of the disk needed to boot the image, in gigabytes.</para>
<para>
--min-ram DISK_RAM
    The minimum amount of RAM needed to boot the image, in megabytes.
</para></note>



<para>
An istance using docker image has to be scheduled on compute-node with nova-docker. To do so it's necessary to define this property on the image, with the command:
</para>
<screen>
glance image-update --property hypervisor_type=docker &lt;image-id&gt; 
+------------------+--------------------------------------+
| Property         | Value                                |
+------------------+--------------------------------------+
| checksum         | 363070ea9529855747a3a511b5f0b785     |
| container_format | docker                               |
| created_at       | 2016-11-07T07:59:39Z                 |
| disk_format      | raw                                  |
| hypervisor_type  | docker                               |
| id               | e7a6b90b-19ed-4560-8945-6ee42e5c3fed |
| min_disk         | 0                                    |
| min_ram          | 0                                    |
| name             | centos                               |
| owner            | cbf5e7bab17d4e8cbad235d8eba924c8     |
| protected        | False                                |
| size             | 204124160                            |
| status           | active                               |
| tags             | []                                   |
| updated_at       | 2016-11-07T08:02:42Z                 |
| virtual_size     | None                                 |
| visibility       | private                              |
+------------------+--------------------------------------+

In this example &lt;image-id&gt; is e7a6b90b-19ed-4560-8945-6ee42e5c3fed.

</screen>

<note> <para>There should be a long lived process running in the docker image, otherwise the instance will not be able to spawn successfully. This can be done by using <ulink url="https://docs.docker.com/reference/builder/">CMD or ENTRYPOINT</ulink> in <ulink url="https://docs.docker.com/engine/getstarted/step_four/">Dockerfile</ulink> or specifing the command through glance image property, 'os_command_line' for test, e.g: 
</para>
<screen>
glance image-update --property os_command_line='/usr/sbin/sshd -D' &lt;image-id&gt; 
+------------------+--------------------------------------+
| Property         | Value                                |
+------------------+--------------------------------------+
| checksum         | 363070ea9529855747a3a511b5f0b785     |
| container_format | docker                               |
| created_at       | 2016-11-07T07:59:39Z                 |
| disk_format      | raw                                  |
| hypervisor_type  | docker                               |
| id               | e7a6b90b-19ed-4560-8945-6ee42e5c3fed |
| min_disk         | 0                                    |
| min_ram          | 0                                    |
| name             | centos                               |
| os_command_line  | /usr/sbin/sshd -D                    |
| owner            | cbf5e7bab17d4e8cbad235d8eba924c8     |
| protected        | False                                |
| size             | 204124160                            |
| status           | active                               |
| tags             | []                                   |
| updated_at       | 2016-11-07T08:37:20Z                 |
| virtual_size     | None                                 |
| visibility       | private                              |
+------------------+--------------------------------------+
</screen>
</note> 
<warning><para>With the 'os_command_line' in this example you need a docker image with openssh service installed which ensures the existance of the /usr/sbin/sshd executable (for a better understanding on how to set up a docker image with SSHd service see this <ulink url="https://docs.docker.com/engine/examples/running_ssh_service/">link</ulink>).</para></warning>
<para>
Once the image is correctly loaded and updated you can run the docker image the same way you launch a VM (<xref linkend="CreatingVMs"/>).
</para>

</section>

</chapter>
